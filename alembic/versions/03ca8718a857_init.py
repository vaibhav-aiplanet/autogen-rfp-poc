"""init

Revision ID: 03ca8718a857
Revises: 
Create Date: 2025-04-04 17:50:05.688251

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '03ca8718a857'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('google_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('profile_image', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('premium_plan', sa.Enum('BASIC', 'PREMIUM', 'PROFESSIONAL', name='premiumplantype'), nullable=False),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(), nullable=True),
    sa.Column('subscription_status', sa.String(), nullable=True),
    sa.Column('subscription_end_date', sa.DateTime(), nullable=True),
    sa.Column('stripe_session_id', sa.String(), nullable=True),
    sa.Column('cancel_at_period_end', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('google_id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('stripe_customer_id'),
    sa.UniqueConstraint('stripe_session_id'),
    sa.UniqueConstraint('stripe_subscription_id')
    )
    op.create_table('application_limit',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('userid', sa.UUID(), nullable=False),
    sa.Column('max_folder', sa.Integer(), nullable=False),
    sa.Column('max_file', sa.Integer(), nullable=False),
    sa.Column('max_agent', sa.Integer(), nullable=False),
    sa.Column('max_tokens', sa.Integer(), nullable=False),
    sa.Column('tokens_left', sa.Integer(), nullable=True),
    sa.Column('last_token_reset', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['userid'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('folder',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('userid', sa.UUID(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['userid'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'userid', 'is_deleted', name='uq_folder_name_user')
    )
    op.create_index(op.f('ix_folder_name'), 'folder', ['name'], unique=True)
    op.create_table('user_web_search_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('max_limit', sa.Integer(), nullable=False),
    sa.Column('current_count', sa.Integer(), nullable=False),
    sa.Column('last_refreshed', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_web_search_history')
    op.drop_index(op.f('ix_folder_name'), table_name='folder')
    op.drop_table('folder')
    op.drop_table('application_limit')
    op.drop_table('users')
    # ### end Alembic commands ###
